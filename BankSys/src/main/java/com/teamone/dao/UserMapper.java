package com.teamone.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.teamone.entity.User;



public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    int deleteByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    User selectByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Fri Jul 28 15:07:17 CST 2017
     */
    int updateByPrimaryKey(User record);
    /**
     * @author vnbuser
     * 根据userName查询用户
     */
    User selectByuserName(String userName);
    
    /**
     * 查询所有用户
     * @return
     */
    List<User> getAllUsers();

    
    /**
     * 删除  用户-角色关联
     * @param userId
     * @return
     */
    int deleteUserRoles(Integer userId);

    /**
     * 建立  用户-角色关联
     * @param userId
     * @param roleId
     * @return
     */
    int createUserRole(Integer userId,Long roleId);
    /**
     * 搜索所有的柜员用户
     * @return
     */
    List<User> searchAllUser();
    /**
     * 解冻柜员用户
     * @param userId
     * @return
     */
    int updateStatus(Integer userId);

    /**
     * 冻结柜员用户
     * @param userId
     * @return
     */
	int unFreeze(Integer userId);
    
}